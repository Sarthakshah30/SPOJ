#include<bits/stdc++.h>
using namespace std;

vector< pair<int,int> > vec[50050];
int N;
long long int dist[50050];
int dodfs(int source);

long long int res=0;

int main(){
	int test;
	cin>>test;
	while(test-->0){
		cin>>N;
		long long int a,b,x;
		for(int i = 1 ; i<N ; i ++){
			cin>>a>>b>>x;
			vec[a-1].push_back(make_pair(b-1,x));
			vec[b-1].push_back(make_pair(a-1,x));
		}
		x=dodfs(0);
		dodfs(x);
		cout<<res<<endl;
		for(int i = 0 ; i<N ; i++)
		vec[i].clear();
	}
}

int dodfs(int source){
	memset(dist,-1,sizeof(dist));
	dist[source]=0;
	stack<int> s;
	s.push(source);
	while(!s.empty()){
		
		int x = s.top();
		s.pop();
		
		for(int i = 0 ; i < vec[x].size();i++){
			pair<int,int> y(vec[x][i]);
			if(dist[y.first]==-1){
				s.push(y.first);
				dist[y.first]=dist[x]+y.second;
			}
			
		}
	}
	int vertex=0;
	for(int i = 0 ; i<N ; i++){
		if(dist[i]>dist[vertex])
		{
		res=dist[i];
		vertex=i;
		}
	}
	return vertex;
}
