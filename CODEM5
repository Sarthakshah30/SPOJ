#include<iostream>
#include<cstring>
#include<cmath>
#include<map>
#include<string>

using namespace std;

map<pair<int,string>,int> m;

int calculate(int total,string bitmasks,int *array,int n,int digits);

int main()
{
    int test;
    cin>>test;
    while(test-->0)
    {
        int n;
        cin>>n;
        int total;
        cin>>total;
        int array[n];
        string bitmasks="";
        for(int i = 0 ; i< n ;i++)
        {
			cin>>array[i];
			bitmasks.append("0");
		}
        int result=calculate(total,bitmasks,array,n,0);
        if(result>=1000)
        cout<<"impossible"<<endl;
        else
        cout<<result<<endl;
        m.clear();
    }
}

int calculate(int total,string bitmasks,int *array,int n,int digits)
{
	pair<int,string> x(total,bitmasks);
  if(m.find(x)!=m.end())
  {
   return m[x];
  }
  else if(total==0)
  return 0;
  else if(total!=0 && digits==n)
  {
    return 1000;
  }
  else
  {
    int min = 1000;
    for(int i = 0 ; i< n ;i++)
    {
        if(bitmasks[i]=='0')
        {
        	bitmasks[i]='1';
            int local=1+calculate(total-array[i],bitmasks,array,n,digits+1);
            if(local<min && local<100)
            min=local;
        }
    }
    m.insert(std::make_pair(x,min));
    return min;
  }
}
