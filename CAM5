#include<bits/stdc++.h>

using namespace std;

int N,E;
vector<int> adj[100000];
bool visited[100000];

void dodfs(int source)
{
	stack<int> s;
	s.push(source);
	visited[source]=true;
	
	while(!s.empty())
	{
		int x = s.top();
		s.pop();
		
		for(int i = 0 ; i < adj[x].size() ;i++)
		{
			if(!visited[adj[x][i]])
			{
				s.push(adj[x][i]);
				visited[adj[x][i]]=true;
			}
		}
	}
}

int main()
{
	int test;
	cin>>test;
	while(test-->0)
	{

		cin>>N;
		cin>>E;
		
		
		
		for(int i = 0 ; i < E ; i++)
		{
			int x,y;
			cin>>x>>y;
			adj[x].push_back(y);
			adj[y].push_back(x);
		}
		
		if(E==0)
		cout<<N<<endl;
		else
		{
			
			long long int count=0;
			memset(visited,0,sizeof(visited));
			for(int i = 0 ; i < N ; i++)
			{
				if(!visited[i])
				{
					dodfs(i);
					count++;
				}
			}
			cout<<count<<endl;
		}
		
		for(int i = 0 ;i< N ; i++)
		adj[i].clear();
	}
}
